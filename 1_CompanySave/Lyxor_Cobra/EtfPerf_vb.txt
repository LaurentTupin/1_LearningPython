import pyodbc
import numpy as np
import math
import pandas as pd
import datetime as dt
import sys

sys.path.append("<Criteria4>")
import fct_DbUpdate as fDb


server = '<Criteria1>'
db1 = '<Criteria2>'
refCcy = '<Criteria3>'
bl_file = '<Criteria5>'
date_to = '<CriteriaDate1>'


# liste des Issuers
list_Issuer = ['LYXOR', 'AMUNDI', 'BBVA','BMO', 'COMMERZBANK', 'COMSTAGE', 'DB X', 'DEKA', 'EASYETF', 'ETF SECURITIES', 
			'FINANS PORTFOY', 'FINEX', 'FIRST TRUST', 'HSBC', 'ISHARES', 'JULIUS BAER', 'MARKET ACCESS', 'NOMURA', 
			'OSSIAM', 'POWERSHARES', 'STATE STREET', 'SOURCE', 'VANGUARD', 'UBS', 'VAN ECK', 'XACT', 'WISDOMTREE']

#Recuperer les Date From
def getDateFrom(date_to):
    cnxn = pyodbc.connect('DRIVER={SQL Server};SERVER=' + server + ';DATABASE=' + db1)
    cursor = cnxn.cursor()
    req_dteFrom = "SELECT dte_Date [Date] FROM Ref_Date \
        WHERE bt_EOM = 1 AND ((int_Year = YEAR('" + date_to + "') \
        AND (int_Month = MONTH('" + date_to + "')-1 \
        OR int_Month = MONTH('" + date_to + "')-2 \
        OR int_Month = MONTH('" + date_to + "')-3 \
        OR int_Month = MONTH('" + date_to + "')-6)) \
        OR (int_Year = YEAR('" + date_to + "')-1 \
        AND (int_Month = MONTH('" + date_to + "')+11 \
        OR int_Month = MONTH('" + date_to + "')+10 \
        OR int_Month = MONTH('" + date_to + "')+9 \
        OR int_Month = MONTH('" + date_to + "')+6 \
        OR int_Month = 12)) \
        OR (int_Month = MONTH('" + date_to + "') \
        AND (int_Year = YEAR('" + date_to + "')-1 \
        OR int_Year = YEAR('" + date_to + "')-2 \
        OR int_Year = YEAR('" + date_to + "')-3 \
        OR int_Year = YEAR('" + date_to + "')-5))) \
        ORDER BY [Date] DESC "
    cursor.execute(req_dteFrom)
    return pd.DataFrame.from_records(cursor.fetchall(), columns=['Date'])


date_to = date_to[6:] + '-' + date_to[:2] + '-' + date_to[3:5]
# dte_To = dt.datetime.strptime(date_to, '%Y-%m-%d')


#Recuperer les Date From
all_date_from = getDateFrom(date_to)
#Boucle
for iNum, Issuer in enumerate(list_Issuer):
	for dNum, dateFrom in all_date_from['Date'].iteritems():
		fDb.getAllAnalysisByIssuer(dateFrom, date_to, Issuer, refCcy, bl_file)







# # Recuperer les Date_To
# def getDateTo(date_to):
    # cnxn = pyodbc.connect('DRIVER={SQL Server};SERVER=' + server + ';DATABASE=' + db1)
    # cursor = cnxn.cursor()
    # req_dteFrom = "SELECT dte_Date [Date] FROM Ref_Date \
        # WHERE bt_EOM = 1 \
        # AND (int_Year = YEAR('" + date_to + "')-1 \
        # OR int_Year = YEAR('" + date_to + "')-2 \
        # OR int_Year = YEAR('" + date_to + "')-3 \
	# OR int_Year = YEAR('" + date_to + "')-4 \
        # OR int_Year = YEAR('" + date_to + "')-5) \
        # ORDER BY [Date] DESC "
    # cursor.execute(req_dteFrom)
    # return pd.DataFrame.from_records(cursor.fetchall(), columns=['Date'])

		
# all_date_to = getDateTo(date_to)
# #Boucle
# for cNum, dateTo in all_date_to['Date'].iteritems():
    # #Recuperer les Date From
    # all_date_from = getDateFrom(dateTo)
    # for dNum, dateFrom in all_date_from['Date'].iteritems():
        # for iNum, Issuer in enumerate(list_Issuer):
            # fDb.getAllAnalysisByIssuer(dateFrom, dateTo, Issuer, refCcy, bl_file)

